scalar GraphQLDate

enum StatusTypes{
    New
    Assigned
    Fixed
    Closed
}



type Issue {
 _id:ID!
 id: Int!
 title: String!
 status: StatusTypes!
 owner: String
 effort: Int
 created: GraphQLDate!
 due: GraphQLDate
 description: String
}

type IssueCounts {
 owner: String!
 New: Int
 Assigned: Int
 Fixed: Int
 Closed: Int
}

type IssueListWithPages {
 issues: [Issue!]!
 pages: Int
}

"Toned down Issue, used as inputs, without server generated values."
input IssueInputs{
 title: String!
 "Optional, if not supplied, will be set to 'New'"
 status: StatusTypes = New
 owner: String
 effort: Int
 due: GraphQLDate
 description: String

}

input IssueUpdateInputs{
    title:String
    status: StatusTypes
    owner: String
    effort: Int
    due: GraphQLDate
    description: String
}

type Query {
  about: String!
  issueList(
      status: StatusTypes
      effortMin: Int
      effortMax: Int
      search: String
      page: Int = 1
      ): IssueListWithPages
  issue(id: Int!): Issue!
  issueCounts(
      status: StatusTypes
      effortMin: Int
      effortMax: Int
      ): [IssueCounts!]!
}

type Mutation {
 setAboutMessage(message: String!): String
 issueAdd(issue:IssueInputs!):Issue
 issueUpdate(id: Int!, changes: IssueUpdateInputs!): Issue!
 issueDelete(id:Int!): Boolean!
 issueRestore(id: Int!): Boolean!
}